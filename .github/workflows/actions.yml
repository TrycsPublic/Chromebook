name: CollabVM Server

on: [push, pull_request]

# TODO: Refactor this to allow ubuntu/appimage/windows workflows everywhere

jobs:
  build:
    strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
        with: 
          submodules: true
      - name: Install Dependencies And Setup LLVM (Ubuntu)
        id: depends-n-llvm
        if: matrix.os == 'ubuntu-latest'
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
             sudo apt install -y libvncserver-dev libboost-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev libspdlog-dev libfmt-dev cmake ninja-build
             # We need the latest version of Clang to build the server.
             sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
          elif [ "$RUNNER_OS" == "Windows" ]; then
             echo "how'd you even get here on windows????"
          fi
        shell: bash             
      - name: Build
        id: build
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
                  cmake -B build -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang-14 -DCMAKE_CXX_COMPILER=clang++-14
                  cmake --build build
          elif [ "$RUNNER_OS" == "Windows" ]; then
                  cmake -B build -A x64 -G "Visual Studio 17 2022" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="$VCPKG_INSTALLATION_ROOT\\scripts\\buildsystems\\vcpkg.cmake"
                  cmake --build build
          fi
        shell: bash
      - name: Upload Linux Build to GitHub Release
        uses: svenstaro/upload-release-action@2.2.1
        if: matrix.os == 'ubuntu-latest'
        id: uploadfiles
        with: 
          asset_name: collab-vm-server-linux-amd64
          release_name: CollabVM Server 3.0/${{github.ref}}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/collab-vm-server
          # This shouldn't create a tag. Instead, we'll tag a -pre tag
          # and once we're ready, create a new release tag.
          tag: v3.0.0-pre
          overwrite: true
          prerelease: true
          body: "This is an unstable build of collab-vm-server 3.0 automatically generated by GitHub Actions. It is not usable yet and is not suitable for production."
